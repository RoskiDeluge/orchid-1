import Head from 'next/head';
import Link from 'next/link';
import Image from 'next/image';
import styles from '../styles/Home.module.css';
import { VscGithubAlt } from 'react-icons/vsc';
import { useState, useEffect } from 'react';
import { app } from '../firebase/initFirebase';
// import { getStorage, ref, getDownloadURL, list } from 'firebase/storage';
// import { generateAsync } from 'stability-ts';
import { generate } from 'stability-ts';
import { getCurrentNumber, getCurrentPoem } from '../helpers/api-util';

export default function Home({ num, poem }) {
  const [orchidImg, setOrchidImg] = useState('');
  // const storage = getStorage(app);
  // const storageRef = ref(storage, '/orchid17/pkl17_200');

  // const getImgURL = async () => {
  //   const allImages = await list(storageRef, { maxResults: 200 });

  //   getDownloadURL(allImages.items[num])
  //     .then((url) => {
  //       setOrchidURL(url);
  //     })
  //     .catch((error) => {
  //       console.log(error);
  //     });
  // };

  // const getSDImg = async () => {
  //   try {
  //     const { res, images } = await generateAsync({
  //       prompt: poem,
  //       apiKey: process.env.DREAMSTUDIO_API_KEY,
  //     });
  //     setOrchidImg(images);
  //   } catch (e) {
  //     console.log('error', e);
  //   }
  // };
  const api = generate({
    prompt: poem,
    apiKey: process.env.DREAMSTUDIO_API_KEY,
  });

  api.on('image', ({ buffer, filePath }) => {
    console.log('Image', buffer, filePath);
  });

  api.on('end', (data) => {
    console.log('Generating Complete', data);
  });

  useEffect(() => {
    // getImgURL();
    getSDImg();
    console.log('current number: ', num);
    console.log('current poem: ', poem);
  }, []);

  return (
    <div className={styles.container}>
      <Head>
        <title>Orchid 0</title>
        <meta
          name="description"
          content="Image generated by the StyleGan2 ML algorithm trained on an evolving personal collection of orchid photos."
        />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      {orchidImg && (
        // <Image
        //   src={orchidURL}
        //   alt="Image generated by the StyleGan2 ML algorithm trained on an evolving personal collection of orchid photos."
        //   width={1024}
        //   height={1024}
        // />
        <div>{orchidImg}</div>
      )}
      <div>
        <p className={styles.poem}>{poem}</p>
      </div>
      <div className={styles.footer}>
        <p>Orchid 0 - ({num})</p>
        <Link
          href="https://github.com/RoskiDeluge/orchid-0"
          className={styles.link}
        >
          <VscGithubAlt />
        </Link>
      </div>
    </div>
  );
}

export async function getStaticProps() {
  const currentNumber = await getCurrentNumber();
  const currentPoem = await getCurrentPoem();

  return {
    props: {
      num: currentNumber,
      poem: currentPoem,
    },
    revalidate: 86400,
  };
}
